#include<avr/io.h>
#include<avr/interrupt.h>
#include<util/delay.h>
#include "gpio.h"
#include "common_macros.h"
#include "uart.h"
#include "timer.h"
#include "twi.h"
#include "motor.h"
#include "lcd.h"

#define CONTROL_Ready 0xCA
#define HMI_Ready 0xAC
#define CONTROL_ADDRESS 0x01

//void initialization (void);

uint8 password_1[5];
uint8 password_2[5];
uint8 g_matching_flag=0;
typedef enum {Unmatched,Matched}matchig_state;



matchig_state password_state=Matched;
uint8 i;


/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/
void recive_password(void);


int main(void)
{

	UART_ConfigType UART_Configs={_8_bit,no_parity,_1_bit,9600};
	TWI_ConfigType TWI_Configs={CONTROL_ADDRESS,250};
	UART_init(&UART_Configs);
	TWI_init(&TWI_Configs);
	DcMotor_Init();
	LCD_init();
	recive_password();




	while(1){





	}//End Of while Loop

}// End Of Int Main


/* Create System Password */
void recive_password(void)
{

	do{

		UART_sendByte(CONTROL_Ready);
		for(i=0;i<5;i++)
		{

			password_1[i]=UART_recieveByte();

		}


		UART_sendByte(CONTROL_Ready);
		for(i=0;i<5;i++)
		{

			password_2[i]=UART_recieveByte();

		}
		/*test*/
		for(i=0;i<5;i++){
			LCD_intgerToString(password_1[i]);
		}

		LCD_moveCursor(1, 0);
		for(i=0;i<5;i++){
			LCD_displayCharacter('*');
			//LCD_intgerToString(password_2[i]);
		}



		for(i=0;i<5;i++){
			if(password_1[i]!=password_2[i])
			{
				g_matching_flag=0;
				password_state=Unmatched;
				break;

			}

		}

		while(UART_recieveByte()!=HMI_Ready);
		UART_sendByte(password_state);

		if( password_state==Matched)
		{
			g_matching_flag=1;
			for(i=0;i<5;i++)
			{
				EEPROM_writeByte(0x01+i, password_1[i]);
				_delay_ms(10);
			}
		}






	}while(g_matching_flag==0);





}
